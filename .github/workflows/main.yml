name: CI/CD

on: [push, workflow_dispatch]

env:
  GCLOUD_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-small      # Add your cluster name here.
  GKE_ZONE: us-central1                     # Add your cluster zone here.
  DEPLOYMENT_NAME: deployment.yaml          # Add your deployment name here.

jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Download Code
        uses: actions/checkout@v3

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASS }}

  #     - name: Build Artefacts
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: |
  #           brunobotelhobr/my-sample-api:${{ github.run_number }}
  #           brunobotelhobr/my-sample-api:latest

  CD:
    runs-on: ubuntu-latest
    needs: [CI]

    steps:
      - name: Download Code
        uses: actions/checkout@v3

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v3
        with:
         project_id: ${{ secrets.GKE_PROJECT  }}
         credentials_json: ${{ secrets.GKE_SA_KEY  }}
         export_default_credentials: true

      # Test the gcloud CLI
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # # Set up the Cloud SDK
      # - name: 'Set up Cloud SDK'
      #   uses: 'google-github-actions/setup-gcloud@v2'

      # # Authenticate with the Google Cloud CLI
      # - name: Authenticate with Google Cloud
      #   uses: google-github-actions/auth@v3
      #   with:
      #     credentials: ${{ secrets.GKE_SA_KEY }}

      # # Setup GCE CLI
      # - name: GCloud-CLI-Setup
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     service_account_key: ${{ secrets.GKE_SA_KEY }}
      #     project_id: ${{ secrets.GKE_PROJECT }}
      #     cluster_name: ${{ env.GKE_CLUSTER }}
      #     location: ${{ env.GKE_ZONE }}

      # # Set up kustomize
      # - name: Setup-Kustomize
      #   run: |-
      #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
      #     chmod u+x ./kustomize

      # # Deploy the Docker image to the GKE cluster
      # - name: Deploy
      #   run: |-
      #     ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
      #     ./kustomize build . | kubectl apply -f -
      #     kubectl rollout status k8s/deployment.yaml
      #     kubectl get services -o wide

      # # Get the external IP of the service
      # - name: Get-External-IP
      #   run: |-
      #     echo "External IP: $(kubectl get service my-sample-api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')"
      #     export k8s_service_ip=$(kubectl get service my-sample-api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

      # # Sleep for 45s
      # - name: Sleep for 45s
      #   uses: juliangruber/sleep-action@v2.0.0
      #   with:
      #     time: 45s

      # # Run QA tests
      # - name: QA tests
      #   run: chmod +x test/qa.sh; test/qa.sh $k8s_service_ip

{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "KSV004",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Default capabilities: some containers do not drop any"
              },
              "fullDescription": {
                "text": "Security best practices require containers to run with minimal required capabilities."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv004",
              "help": {
                "text": "Misconfiguration KSV004\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Default capabilities: some containers do not drop any\nMessage: Container 'api' of 'deployment' 'api' in 'default' namespace should set securityContext.capabilities.drop\nLink: [KSV004](https://avd.aquasec.com/misconfig/ksv004)\nSecurity best practices require containers to run with minimal required capabilities.",
                "markdown": "**Misconfiguration KSV004**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Default capabilities: some containers do not drop any|Container 'api' of 'deployment' 'api' in 'default' namespace should set securityContext.capabilities.drop|[KSV004](https://avd.aquasec.com/misconfig/ksv004)|\n\nSecurity best practices require containers to run with minimal required capabilities."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV032",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "All container images must start with the *.azurecr.io domain"
              },
              "fullDescription": {
                "text": "Containers should only use images from trusted registries."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv032",
              "help": {
                "text": "Misconfiguration KSV032\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: All container images must start with the *.azurecr.io domain\nMessage: container api of deployment api in default namespace should restrict container image to your specific registry domain. For Azure any domain ending in 'azurecr.io'\nLink: [KSV032](https://avd.aquasec.com/misconfig/ksv032)\nContainers should only use images from trusted registries.",
                "markdown": "**Misconfiguration KSV032**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|All container images must start with the *.azurecr.io domain|container api of deployment api in default namespace should restrict container image to your specific registry domain. For Azure any domain ending in 'azurecr.io'|[KSV032](https://avd.aquasec.com/misconfig/ksv032)|\n\nContainers should only use images from trusted registries."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV033",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "All container images must start with a GCR domain"
              },
              "fullDescription": {
                "text": "Containers should only use images from trusted GCR registries."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv033",
              "help": {
                "text": "Misconfiguration KSV033\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: All container images must start with a GCR domain\nMessage: container api of deployment api in default namespace should restrict container image to your specific registry domain. See the full GCR list here: https://cloud.google.com/container-registry/docs/overview#registries\nLink: [KSV033](https://avd.aquasec.com/misconfig/ksv033)\nContainers should only use images from trusted GCR registries.",
                "markdown": "**Misconfiguration KSV033**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|All container images must start with a GCR domain|container api of deployment api in default namespace should restrict container image to your specific registry domain. See the full GCR list here: https://cloud.google.com/container-registry/docs/overview#registries|[KSV033](https://avd.aquasec.com/misconfig/ksv033)|\n\nContainers should only use images from trusted GCR registries."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV034",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Container images from public registries used"
              },
              "fullDescription": {
                "text": "Container images must not start with an empty prefix or a defined public registry domain."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv034",
              "help": {
                "text": "Misconfiguration KSV034\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: Container images from public registries used\nMessage: Container 'api' of Deployment 'api' should restrict container image to use private registries\nLink: [KSV034](https://avd.aquasec.com/misconfig/ksv034)\nContainer images must not start with an empty prefix or a defined public registry domain.",
                "markdown": "**Misconfiguration KSV034**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|Container images from public registries used|Container 'api' of Deployment 'api' should restrict container image to use private registries|[KSV034](https://avd.aquasec.com/misconfig/ksv034)|\n\nContainer images must not start with an empty prefix or a defined public registry domain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV035",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "All container images must start with an ECR domain"
              },
              "fullDescription": {
                "text": "Container images from non-ECR registries should be forbidden."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv035",
              "help": {
                "text": "Misconfiguration KSV035\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: All container images must start with an ECR domain\nMessage: Container 'api' of Deployment 'api' should restrict images to own ECR repository. See the full ECR list here: https://docs.aws.amazon.com/general/latest/gr/ecr.html\nLink: [KSV035](https://avd.aquasec.com/misconfig/ksv035)\nContainer images from non-ECR registries should be forbidden.",
                "markdown": "**Misconfiguration KSV035**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|All container images must start with an ECR domain|Container 'api' of Deployment 'api' should restrict images to own ECR repository. See the full ECR list here: https://docs.aws.amazon.com/general/latest/gr/ecr.html|[KSV035](https://avd.aquasec.com/misconfig/ksv035)|\n\nContainer images from non-ECR registries should be forbidden."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV110",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Workloads in the default namespace"
              },
              "fullDescription": {
                "text": "Checks whether a workload is running in the default namespace."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv110",
              "help": {
                "text": "Misconfiguration KSV110\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Workloads in the default namespace\nMessage: deployment api in default namespace should set metadata.namespace to a non-default namespace\nLink: [KSV110](https://avd.aquasec.com/misconfig/ksv110)\nChecks whether a workload is running in the default namespace.",
                "markdown": "**Misconfiguration KSV110**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Workloads in the default namespace|deployment api in default namespace should set metadata.namespace to a non-default namespace|[KSV110](https://avd.aquasec.com/misconfig/ksv110)|\n\nChecks whether a workload is running in the default namespace."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV118",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Default security context configured"
              },
              "fullDescription": {
                "text": "Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv118",
              "help": {
                "text": "Misconfiguration KSV118\nType: Kubernetes Security Check\nSeverity: HIGH\nCheck: Default security context configured\nMessage: container api in default namespace is using the default security context\nLink: [KSV118](https://avd.aquasec.com/misconfig/ksv118)\nSecurity context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.",
                "markdown": "**Misconfiguration KSV118**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|HIGH|Default security context configured|container api in default namespace is using the default security context|[KSV118](https://avd.aquasec.com/misconfig/ksv118)|\n\nSecurity context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            }
          ],
          "version": "0.60.0"
        }
      },
      "results": [
        {
          "ruleId": "KSV004",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV004\nSeverity: LOW\nMessage: Container 'api' of 'deployment' 'api' in 'default' namespace should set securityContext.capabilities.drop\nLink: [KSV004](https://avd.aquasec.com/misconfig/ksv004)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV032",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV032\nSeverity: MEDIUM\nMessage: container api of deployment api in default namespace should restrict container image to your specific registry domain. For Azure any domain ending in 'azurecr.io'\nLink: [KSV032](https://avd.aquasec.com/misconfig/ksv032)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV033",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV033\nSeverity: MEDIUM\nMessage: container api of deployment api in default namespace should restrict container image to your specific registry domain. See the full GCR list here: https://cloud.google.com/container-registry/docs/overview#registries\nLink: [KSV033](https://avd.aquasec.com/misconfig/ksv033)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV034",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV034\nSeverity: MEDIUM\nMessage: Container 'api' of Deployment 'api' should restrict container image to use private registries\nLink: [KSV034](https://avd.aquasec.com/misconfig/ksv034)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV035",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV035\nSeverity: MEDIUM\nMessage: Container 'api' of Deployment 'api' should restrict images to own ECR repository. See the full ECR list here: https://docs.aws.amazon.com/general/latest/gr/ecr.html\nLink: [KSV035](https://avd.aquasec.com/misconfig/ksv035)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV110",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV110\nSeverity: LOW\nMessage: deployment api in default namespace should set metadata.namespace to a non-default namespace\nLink: [KSV110](https://avd.aquasec.com/misconfig/ksv110)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV118",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Artifact: k8s/deployment.yaml\nType: kubernetes\nVulnerability KSV118\nSeverity: HIGH\nMessage: container api in default namespace is using the default security context\nLink: [KSV118](https://avd.aquasec.com/misconfig/ksv118)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "k8s/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "k8s/deployment.yaml"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///Users/botelho/Library/CloudStorage/Dropbox/My-Code/My-Sample-API/"
        }
      }
    }
  ]
}

{
  "SchemaVersion": 2,
  "CreatedAt": "2025-06-06T17:53:57.036261762-03:00",
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "package-lock.json",
      "Class": "lang-pkgs",
      "Type": "npm",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-47764",
          "PkgID": "cookie@0.4.0",
          "PkgName": "cookie",
          "PkgIdentifier": {
            "PURL": "pkg:npm/cookie@0.4.0",
            "UID": "2ceb9eb56dc141fa"
          },
          "InstalledVersion": "0.4.0",
          "FixedVersion": "0.7.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-47764",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "cookie: cookie accepts cookie name, path, and domain with out of bounds characters",
          "Description": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-74"
          ],
          "VendorSeverity": {
            "cbl-mariner": 2,
            "ghsa": 1,
            "redhat": 1
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 3.7
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-47764",
            "https://github.com/jshttp/cookie",
            "https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c",
            "https://github.com/jshttp/cookie/pull/167",
            "https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-47764",
            "https://www.cve.org/CVERecord?id=CVE-2024-47764"
          ],
          "PublishedDate": "2024-10-04T20:15:07.31Z",
          "LastModifiedDate": "2024-10-07T17:48:28.117Z"
        },
        {
          "VulnerabilityID": "CVE-2024-29041",
          "PkgID": "express@4.17.1",
          "PkgName": "express",
          "PkgIdentifier": {
            "PURL": "pkg:npm/express@4.17.1",
            "UID": "d6c526629303adc5"
          },
          "InstalledVersion": "4.17.1",
          "FixedVersion": "4.19.2, 5.0.0-beta.3",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-29041",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "express: cause malformed URLs to be evaluated",
          "Description": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-601",
            "CWE-1286"
          ],
          "VendorSeverity": {
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-29041",
            "https://expressjs.com/en/4x/api.html#res.location",
            "https://github.com/expressjs/express",
            "https://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd",
            "https://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94",
            "https://github.com/expressjs/express/pull/5539",
            "https://github.com/expressjs/express/security/advisories/GHSA-rv95-896h-c2vc",
            "https://github.com/koajs/koa/issues/1800",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-29041",
            "https://www.cve.org/CVERecord?id=CVE-2024-29041"
          ],
          "PublishedDate": "2024-03-25T21:15:46.847Z",
          "LastModifiedDate": "2024-11-21T09:07:26.023Z"
        },
        {
          "VulnerabilityID": "CVE-2024-43796",
          "PkgID": "express@4.17.1",
          "PkgName": "express",
          "PkgIdentifier": {
            "PURL": "pkg:npm/express@4.17.1",
            "UID": "d6c526629303adc5"
          },
          "InstalledVersion": "4.17.1",
          "FixedVersion": "4.20.0, 5.0.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-43796",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "express: Improper Input Handling in Express Redirects",
          "Description": "Express.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-79"
          ],
          "VendorSeverity": {
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 1,
            "nvd": 2,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 4.7
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-43796",
            "https://github.com/expressjs/express",
            "https://github.com/expressjs/express/commit/54271f69b511fea198471e6ff3400ab805d6b553",
            "https://github.com/expressjs/express/security/advisories/GHSA-qw6h-vgh9-j6wx",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-43796",
            "https://www.cve.org/CVERecord?id=CVE-2024-43796"
          ],
          "PublishedDate": "2024-09-10T15:15:17.51Z",
          "LastModifiedDate": "2024-09-20T16:07:47.997Z"
        },
        {
          "VulnerabilityID": "CVE-2022-3517",
          "PkgID": "minimatch@3.0.4",
          "PkgName": "minimatch",
          "PkgIdentifier": {
            "PURL": "pkg:npm/minimatch@3.0.4",
            "UID": "59f390e6228c1c1c"
          },
          "InstalledVersion": "3.0.4",
          "FixedVersion": "3.0.5",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-3517",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-minimatch: ReDoS via the braceExpand function",
          "Description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-400",
            "CWE-1333"
          ],
          "VendorSeverity": {
            "alma": 2,
            "ghsa": 3,
            "nvd": 3,
            "oracle-oval": 3,
            "redhat": 2,
            "rocky": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2023:0321",
            "https://access.redhat.com/security/cve/CVE-2022-3517",
            "https://bugzilla.redhat.com/2066009",
            "https://bugzilla.redhat.com/2130518",
            "https://bugzilla.redhat.com/2134609",
            "https://bugzilla.redhat.com/2140911",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2066009",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2130518",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2134609",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2140911",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2142808",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44906",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3517",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35256",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-43548",
            "https://errata.almalinux.org/9/ALSA-2023-0321.html",
            "https://errata.rockylinux.org/RLSA-2023:0321",
            "https://github.com/grafana/grafana-image-renderer/issues/329",
            "https://github.com/isaacs/minimatch",
            "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6 (v3.0.5)",
            "https://github.com/nodejs/node/issues/42510",
            "https://linux.oracle.com/cve/CVE-2022-3517.html",
            "https://linux.oracle.com/errata/ELSA-2023-1743.html",
            "https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-3517",
            "https://ubuntu.com/security/notices/USN-6086-1",
            "https://www.cve.org/CVERecord?id=CVE-2022-3517"
          ],
          "PublishedDate": "2022-10-17T20:15:09.937Z",
          "LastModifiedDate": "2025-05-13T14:15:18.11Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45296",
          "PkgID": "path-to-regexp@0.1.7",
          "PkgName": "path-to-regexp",
          "PkgIdentifier": {
            "PURL": "pkg:npm/path-to-regexp@0.1.7",
            "UID": "f5d742f5611597d0"
          },
          "InstalledVersion": "0.1.7",
          "FixedVersion": "1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45296",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "path-to-regexp: Backtracking regular expressions cause ReDoS",
          "Description": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1333"
          ],
          "VendorSeverity": {
            "cbl-mariner": 3,
            "ghsa": 3,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45296",
            "https://github.com/pillarjs/path-to-regexp",
            "https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f",
            "https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6",
            "https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485",
            "https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef",
            "https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894",
            "https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0",
            "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45296",
            "https://security.netapp.com/advisory/ntap-20250124-0001",
            "https://security.netapp.com/advisory/ntap-20250124-0001/",
            "https://www.cve.org/CVERecord?id=CVE-2024-45296"
          ],
          "PublishedDate": "2024-09-09T19:15:13.33Z",
          "LastModifiedDate": "2025-01-24T20:15:32.68Z"
        },
        {
          "VulnerabilityID": "CVE-2024-52798",
          "PkgID": "path-to-regexp@0.1.7",
          "PkgName": "path-to-regexp",
          "PkgIdentifier": {
            "PURL": "pkg:npm/path-to-regexp@0.1.7",
            "UID": "f5d742f5611597d0"
          },
          "InstalledVersion": "0.1.7",
          "FixedVersion": "0.1.12",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-52798",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "path-to-regexp: path-to-regexp Unpatched `path-to-regexp` ReDoS in 0.1.x",
          "Description": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1333"
          ],
          "VendorSeverity": {
            "cbl-mariner": 2,
            "ghsa": 3,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-52798",
            "https://blakeembrey.com/posts/2024-09-web-redos",
            "https://github.com/pillarjs/path-to-regexp",
            "https://github.com/pillarjs/path-to-regexp/commit/f01c26a013b1889f0c217c643964513acf17f6a4",
            "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-rhx6-c78j-4q9w",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-52798",
            "https://security.netapp.com/advisory/ntap-20250124-0002",
            "https://security.netapp.com/advisory/ntap-20250124-0002/",
            "https://www.cve.org/CVERecord?id=CVE-2024-52798"
          ],
          "PublishedDate": "2024-12-05T23:15:06.31Z",
          "LastModifiedDate": "2025-01-24T20:15:33.107Z"
        },
        {
          "VulnerabilityID": "CVE-2022-24999",
          "PkgID": "qs@6.7.0",
          "PkgName": "qs",
          "PkgIdentifier": {
            "PURL": "pkg:npm/qs@6.7.0",
            "UID": "40286eca0115c93d"
          },
          "InstalledVersion": "6.7.0",
          "FixedVersion": "6.10.3, 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, 6.2.4",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-24999",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "express: \"qs\" prototype poisoning causes the hang of the node process",
          "Description": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1321"
          ],
          "VendorSeverity": {
            "alma": 2,
            "ghsa": 3,
            "nvd": 3,
            "oracle-oval": 2,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2023:0050",
            "https://access.redhat.com/security/cve/CVE-2022-24999",
            "https://bugzilla.redhat.com/2044591",
            "https://bugzilla.redhat.com/2066009",
            "https://bugzilla.redhat.com/2134609",
            "https://bugzilla.redhat.com/2140911",
            "https://bugzilla.redhat.com/2150323",
            "https://errata.almalinux.org/8/ALSA-2023-0050.html",
            "https://github.com/expressjs/express/releases/tag/4.17.3",
            "https://github.com/ljharb/qs",
            "https://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec",
            "https://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68",
            "https://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b",
            "https://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d",
            "https://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1",
            "https://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105",
            "https://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f",
            "https://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee",
            "https://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda",
            "https://github.com/ljharb/qs/pull/428",
            "https://github.com/n8tz/CVE-2022-24999",
            "https://linux.oracle.com/cve/CVE-2022-24999.html",
            "https://linux.oracle.com/errata/ELSA-2023-0050.html",
            "https://lists.debian.org/debian-lts-announce/2023/01/msg00039.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-24999",
            "https://security.netapp.com/advisory/ntap-20230908-0005",
            "https://security.netapp.com/advisory/ntap-20230908-0005/",
            "https://www.cve.org/CVERecord?id=CVE-2022-24999"
          ],
          "PublishedDate": "2022-11-26T22:15:10.153Z",
          "LastModifiedDate": "2025-04-29T14:15:20.41Z"
        },
        {
          "VulnerabilityID": "CVE-2024-43799",
          "PkgID": "send@0.17.1",
          "PkgName": "send",
          "PkgIdentifier": {
            "PURL": "pkg:npm/send@0.17.1",
            "UID": "883c17389240c14"
          },
          "InstalledVersion": "0.17.1",
          "FixedVersion": "0.19.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-43799",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "send: Code Execution Vulnerability in Send Library",
          "Description": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-79"
          ],
          "VendorSeverity": {
            "cbl-mariner": 2,
            "ghsa": 1,
            "nvd": 2,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 4.7
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-43799",
            "https://github.com/pillarjs/send",
            "https://github.com/pillarjs/send/commit/ae4f2989491b392ae2ef3b0015a019770ae65d35",
            "https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-43799",
            "https://www.cve.org/CVERecord?id=CVE-2024-43799"
          ],
          "PublishedDate": "2024-09-10T15:15:17.727Z",
          "LastModifiedDate": "2024-09-20T16:57:14.687Z"
        },
        {
          "VulnerabilityID": "CVE-2024-43800",
          "PkgID": "serve-static@1.14.1",
          "PkgName": "serve-static",
          "PkgIdentifier": {
            "PURL": "pkg:npm/serve-static@1.14.1",
            "UID": "2a8e26637a4111eb"
          },
          "InstalledVersion": "1.14.1",
          "FixedVersion": "1.16.0, 2.1.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-43800",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "serve-static: Improper Sanitization in serve-static",
          "Description": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-79"
          ],
          "VendorSeverity": {
            "cbl-mariner": 2,
            "ghsa": 1,
            "nvd": 2,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 4.7
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
              "V3Score": 5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-43800",
            "https://github.com/expressjs/serve-static",
            "https://github.com/expressjs/serve-static/commit/0c11fad159898cdc69fd9ab63269b72468ecaf6b",
            "https://github.com/expressjs/serve-static/commit/ce730896fddce1588111d9ef6fdf20896de5c6fa",
            "https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-43800",
            "https://www.cve.org/CVERecord?id=CVE-2024-43800"
          ],
          "PublishedDate": "2024-09-10T15:15:17.937Z",
          "LastModifiedDate": "2024-09-20T17:36:30.313Z"
        },
        {
          "VulnerabilityID": "CVE-2021-46708",
          "PkgID": "swagger-ui-dist@3.34.0",
          "PkgName": "swagger-ui-dist",
          "PkgIdentifier": {
            "PURL": "pkg:npm/swagger-ui-dist@3.34.0",
            "UID": "bc67306140ea099d"
          },
          "InstalledVersion": "3.34.0",
          "FixedVersion": "4.1.3",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-46708",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Spoofing attack in swagger-ui-dist",
          "Description": "The swagger-ui-dist package before 4.1.3 for Node.js could allow a remote attacker to hijack the clicking action of the victim. By persuading a victim to visit a malicious Web site, a remote attacker could exploit this vulnerability to hijack the victim's click actions and possibly launch further attacks against the victim.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-1021"
          ],
          "VendorSeverity": {
            "ghsa": 2,
            "nvd": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V2Score": 4.3,
              "V3Score": 6.1
            }
          },
          "References": [
            "https://github.com/swagger-api/swagger-ui",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-46708",
            "https://security.netapp.com/advisory/ntap-20220407-0004",
            "https://security.netapp.com/advisory/ntap-20220407-0004/",
            "https://security.snyk.io/vuln/SNYK-JS-SWAGGERUIDIST-2314884",
            "https://www.npmjs.com/package/swagger-ui-dist/v/4.1.3"
          ],
          "PublishedDate": "2022-03-11T07:15:07.927Z",
          "LastModifiedDate": "2024-11-21T06:34:36.543Z"
        },
        {
          "VulnerabilityID": "GHSA-qrmm-w75w-3wpx",
          "PkgID": "swagger-ui-dist@3.34.0",
          "PkgName": "swagger-ui-dist",
          "PkgIdentifier": {
            "PURL": "pkg:npm/swagger-ui-dist@3.34.0",
            "UID": "bc67306140ea099d"
          },
          "InstalledVersion": "3.34.0",
          "FixedVersion": "4.1.3",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-qrmm-w75w-3wpx",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Server side request forgery in SwaggerUI",
          "Description": "SwaggerUI supports displaying remote OpenAPI definitions through the `?url` parameter. This enables robust demonstration capabilities on sites like `petstore.swagger.io`, `editor.swagger.io`, and similar sites, where users often want to see what their OpenAPI definitions would look like rendered.\n\nHowever, this functionality may pose a risk for users who host their own SwaggerUI instances. In particular, including remote OpenAPI definitions opens a vector for phishing attacks by abusing the trusted names/domains of self-hosted instances.\n\nAn example scenario abusing this functionality could take the following form:\n- `https://example.com/api-docs` hosts a version of SwaggerUI with `?url=` query parameter enabled.\n- Users will trust the domain `https://example.com` and the contents of the OpenAPI definition.\n- A malicious actor may craft a similar OpenAPI definition and service that responds to the defined APIs at `https://evildomain`.\n- Users mistakenly click a phishing URL like `https://example.com/api-docs?url=https://evildomain/fakeapi.yaml` and enters sensitive data via the \"Try-it-out\" feature.\n\nWe do want to stress that this attack vector is limited to scenarios that actively trick users into divulging sensitive information. The ease of this is highly contextual and, therefore, the threat model may be different for individual users and organizations. It is *not* possible to perform non-interactive attacks (e.g., cross-site scripting or code injection) through this mechanism.\n\n### Resolution \nWe've made the decision to [disable query parameters (#4872)](https://github.com/swagger-api/swagger-ui/issues/4872) by default starting with SwaggerUI version `4.1.3`. Please update to this version when it becomes available (**ETA: 2021 December**). Users will still be able to be re-enable the options at their discretion. We'll continue to enable query parameters on the Swagger demo sites.\n\n### Workaround\nIf you host a version of SwaggerUI and wish to mitigate this issue immediately, you are encouraged to add the following custom plugin code:\n\n```js\nSwaggerUI({\n  //  ...other configuration options,\n  plugins: [function UrlParamDisablePlugin() {\n    return {\n      statePlugins: {\n        spec: {\n          wrapActions: {\n            // Remove the ?url parameter from loading an external OpenAPI definition.\n            updateUrl: (oriAction) =\u003e (payload) =\u003e {\n              const url = new URL(window.location.href)\n              if (url.searchParams.has('url')) {\n                url.searchParams.delete('url')\n                window.location.replace(url.toString())\n              }\n              return oriAction(payload)\n            }\n          }\n        }\n      }\n    }\n  }],\n})\n```\n\n### Future UX work\n\nThrough the exploration of this issue, it became apparent that users may not be aware to which web server the Try-it-out function will send requests. While this information is currently presented at the top of the page, understanding may improve by displaying it closer to the \"Execute\" button where requests are actually made. We'll be exploring these UX improvements over the coming months and welcome community input. Please create a Feature Request under the GitHub Issue tab to start a conversation with us and the community.\n\n## Reflected XSS attack\n\n**Warning** in versions \u003c 3.38.0, it is possible to combine the URL options (as mentioned above) with a vulnerability in DOMPurify (https://www.cvedetails.com/cve/CVE-2020-26870/) to create a reflected XSS vector. If your version of Swagger UI is older than 3.38.0, we suggest you upgrade or implement the workaround as mentioned above.\n",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "ghsa": 2
          },
          "References": [
            "https://github.com/domaindrivendev/Swashbuckle.AspNetCore/commit/401c7cb81e5efe835ceb8aae23e82057d57c7d29",
            "https://github.com/swagger-api/swagger-ui",
            "https://github.com/swagger-api/swagger-ui/commit/01a3e55960f864a0acf6a8d06e5ddaf6776a7f76",
            "https://github.com/swagger-api/swagger-ui/issues/4872",
            "https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx"
          ],
          "PublishedDate": "2021-12-09T19:08:38Z",
          "LastModifiedDate": "2022-05-26T20:08:34Z"
        }
      ]
    }
  ]
}
